version: 2.1

workflows:
  version: 2.1
  test:
    jobs:
      # elixir 8 is based on otp 21
      # elixir 12 is based on otp 24
      # test the full range
      - test-elixir-8:
           install-rebar3: true
      - test-elixir-9:
           install-rebar3: true
      - test-elixir-10:
           install-rebar3: true
      - test-elixir-11:
           install-rebar3: true
      - test-elixir-12:
           install-rebar3: true
      - test-elixir-13:
          install-rebar3: true
      - test-21
      - test-22
      - test-23
      - test-24
      - test-25

erlang-docker-template: &erlang-docker-template
  parameters:
    install-rebar3:
      type: boolean
      default: false
  steps:
    - checkout:
        path: ~/ldclient
    - when:
        condition: << parameters.install-rebar3 >>
        steps:
          # Install rebar from source, because current rebar3 does not work
          # with elixir 1.8-1.10 images.
          - run: |
              git clone https://github.com/erlang/rebar3.git
              cd rebar3
              git checkout 3.15.0
              ./bootstrap
              sudo cp ./rebar3 /usr/local/bin/rebar3
              sudo chmod 777 /usr/local/bin/rebar3
              rm -rf rebar3
    - run:
        name: install dependencies and compile
        command: make compile
        working_directory: ~/ldclient
    - run:
        name: run tests
        command: make circle-tests
        working_directory: ~/ldclient
    - run:
        name: run dialyzer
        command: make dialyze
        working_directory: ~/ldclient
    - run:
        name: create test-results directory
        command: mkdir test-results
        working_directory: ~/ldclient
    - run:
        name: copy test results
        command: cp logs/ct/ct_run.*/junit_report.xml test-results/
        working_directory: ~/ldclient
    - store_test_results:
        path: ~/ldclient/test-results
    - run:
        name: make contract test output directory
        command: mkdir /tmp/test-results
    - run:
        name: build contract tests
        command: make build-contract-tests
        working_directory: ~/ldclient
    - run:
        name: start contract test service
        command: make start-contract-test-service
        background: true
        working_directory: ~/ldclient
    - run:
        name: run contract tests
        command: TEST_HARNESS_PARAMS="-junit /tmp/test-results/contract-tests-junit.xml -skip-from test-service/testharness-suppressions.txt" make run-contract-tests
        working_directory: ~/ldclient
    - store_test_results:
        path: /tmp/test-results/

jobs:
  test-elixir-8:
    <<: *erlang-docker-template
    docker:
      - image: cimg/elixir:1.8
      - image: redis
  test-elixir-9:
    <<: *erlang-docker-template
    docker:
      - image: cimg/elixir:1.9
      - image: redis
  test-elixir-10:
    <<: *erlang-docker-template
    docker:
      - image: cimg/elixir:1.10
      - image: redis
  test-elixir-11:
    <<: *erlang-docker-template
    docker:
      - image: cimg/elixir:1.11
      - image: redis
  test-elixir-12:
    <<: *erlang-docker-template
    docker:
      - image: cimg/elixir:1.12
      - image: redis
  test-elixir-13:
    <<: *erlang-docker-template
    docker:
      - image: cimg/elixir:1.13
      - image: redis

  test-21:
    <<: *erlang-docker-template
    docker:
      - image: circleci/erlang:21.3.8
      - image: redis
  test-22:
    <<: *erlang-docker-template
    docker:
      - image: circleci/erlang:22.3.4
      - image: redis
  test-23:
    <<: *erlang-docker-template
    docker:
      - image: circleci/erlang:23.0
      - image: redis
  test-24:
    <<: *erlang-docker-template
    docker:
      - image: circleci/erlang:24.0
      - image: redis
  test-25:
    <<: *erlang-docker-template
    docker:
      - image: circleci/erlang:25
      - image: redis

